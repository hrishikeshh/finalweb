<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Learnings on Hrishikesh Singh</title>
    <link>https://hrishikeshh.github.io/finalweb/learning/</link>
    <description>Recent content in Learnings on Hrishikesh Singh</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 06 Apr 2022 23:15:00 +0700</lastBuildDate><atom:link href="https://hrishikeshh.github.io/finalweb/learning/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Towards reproducible computational drug discovery</title>
      <link>https://hrishikeshh.github.io/finalweb/learning/reproducible-computational-drug-discovery/</link>
      <pubDate>Wed, 06 Apr 2022 23:15:00 +0700</pubDate>
      
      <guid>https://hrishikeshh.github.io/finalweb/learning/reproducible-computational-drug-discovery/</guid>
      <description>Abstract The reproducibility of experiments has been a long standing impediment for further scientific progress. Computational methods have been instrumental in drug discovery efforts owing to its multifaceted utilization for data collection, pre-processing, analysis and inference. This article provides an in-depth coverage on the reproducibility of computational drug discovery. This review explores the following topics: (1) the current state-of-the-art on reproducible research, (2) research documentation (e.g. electronic laboratory notebook, Jupyter notebook, etc.</description>
    </item>
    
    <item>
      <title>ERpred: a web server for the prediction of subtype-specific estrogen receptor antagonists</title>
      <link>https://hrishikeshh.github.io/finalweb/learning/erpred/</link>
      <pubDate>Tue, 05 Apr 2022 23:15:00 +0700</pubDate>
      
      <guid>https://hrishikeshh.github.io/finalweb/learning/erpred/</guid>
      <description>Abstract PYTHON COLLECTION MODULES
DICTIONARY
dict collections.OrderedDict collections.defaultdict collections.ChainMap types.MappingProxyType ARRAY
list tuple array.array str bytes bytearray CLASSES
dataclasses.dataclass collections.namedtuple typing.NamedTuple struct.Struct types.SimpleNamespace SETS and MULTISETS
set frozenset collections.Counter STACKS (LIFOs)
list collections.deque queue.LifoQueue QUEUES (FIFOs)
list collections.deque queue.Queue multiprocessing.Queue PRIORITY QUEUES
list heapq queue.PriorityQueue Full-text article Read article</description>
    </item>
    
    <item>
      <title>Probing the origins of human acetylcholinesterase inhibition via QSAR modeling and molecular docking</title>
      <link>https://hrishikeshh.github.io/finalweb/learning/acetylcholinesterase/</link>
      <pubDate>Mon, 04 Apr 2022 23:15:00 +0700</pubDate>
      
      <guid>https://hrishikeshh.github.io/finalweb/learning/acetylcholinesterase/</guid>
      <description>Abstract Alzheimerâ€™s disease (AD) is a chronic neurodegenerative disease which leads to the gradual loss of neuronal cells. Several hypotheses for AD exists (e.g., cholinergic, amyloid, tau hypotheses, etc.). As per the cholinergic hypothesis, the deficiency of choline is responsible for AD; therefore, the inhibition of AChE is a lucrative therapeutic strategy for the treatment of AD. Acetylcholinesterase (AChE) is an enzyme that catalyzes the breakdown of the neurotransmitter acetylcholine that is essential for cognition and memory.</description>
    </item>
    
    <item>
      <title>Course 1</title>
      <link>https://hrishikeshh.github.io/finalweb/learning/course_url_name/</link>
      <pubDate>Sun, 03 Apr 2022 23:15:00 +0700</pubDate>
      
      <guid>https://hrishikeshh.github.io/finalweb/learning/course_url_name/</guid>
      <description>Tables Syntax Description Test Text Header Title Here&amp;rsquo;s this Paragraph Text And more result = client.payments.get_payment( payment_id = &amp;#34;{{PAYMENT_ID}}&amp;#34; ) if result.is_success(): pprint(result.body) elif result.is_error(): pprint(result.errors) const express = require(&amp;#34;express&amp;#34;); const app = express(); const port = 3000; app.get(&amp;#34;/&amp;#34;, (req, res) =&amp;gt; { res.send(&amp;#34;Hello World!&amp;#34;); }); app.listen(port, () =&amp;gt; { console.log(`Example app listening at http://localhost:${port}`); }); class Solution: def isPalindrome(self, x: int) -&amp;gt; bool: if x&amp;lt;0: return False num = str(x) f = num[:int(len(num)/2):1] s = num[-1:-int(len(num)/2)-1:-1] if f == s: return True return False </description>
    </item>
    
  </channel>
</rss>
